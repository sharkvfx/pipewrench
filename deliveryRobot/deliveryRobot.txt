
Need to define the delivery directory structure for each user:

/<user>/to_mvrcks/<project>/<shot>/<version>/

OR

should it match shotgun structure (which should make more sense)

/<user>/to_mvrcks/<project>/<episode>/<sequence>/<shot>/<step>/publish/renders/<version>/...files...
eg.
/<user>/to_mvrcks/msw/001/001-abc/001-abc-030/Comp/publish/renders/001-abc-030_Comp_v001/001-abc-030_Comp_v001.0001.dpx
                                                                                         001-abc-030_Comp_v001.0002.dpx
                                                                                         ..
                                                                                         001-abc-030_Comp_v001.0050.dpx
                                                                                         001-abc-030_Comp_v001.0051.dpx

then a new structure of symlinks is where the scanner watches

/project/deliveries/<userA>/ --> /<userZ>/to_mvrcks/<project>/


ROOTDIR = '/project/deliveries/

scan for a new directory with the following structure

ROOTDIR/<user>/<shot>/<episode>/<sequence>/<step>/publish>/renders/<version>
if dir is found then
    spawn anothe thread as we don't want to hold up the scanning
    class watchdir
        get shot name, length, task, artist from shotgun
        if no shotname exit and email someone
        scan dir for files
        while no_of_files == length && count == 1 
        if no of files == length then
            publih files into shotgun (which should also copy to project)
            exit
        if after a certain period ( eg 1/2 hour) files don't equal length then
            email someone
        if after 3hours files don't equal length then
            email someone and exit







--------------------------
>>>> I think this is wrong and over complicated

class dirscan:
    '''Scan directory for additional directories and spawn another dirscan if a new dir is found'''

ROOT = './testdir/'

Watch <user>/to_mvrcks/msw   for a new directory (episode)
    if new dir is found then watch in that dir for a new directory (sequence)
        if new dir is found then watch in that dir for a new directory (shot)
            if new dir is found then watch in ./Comp/publish/renders/ for a new directory (version)
                if new iversion dir is found then 
                    get shot no and frames epected from Shotgun
                    watch in ./Comp/publish/renders/<version>  for  new files (version)
                    get file names and file count
                    once file count == shotgun frames publish shot to shotgun
                    exit
                exit
            exit
        exit
    exit

